
                              Exercise 8

Chess

*   Description

   Chess is a board game consisting of two players, a 64-square board 
   (organized as an 8-by-8 grid). Each player controls an army of chess 
   pieces. Each piece is at a position on the board and can be moved. A 
   play involves a chess piece (possibly 2), a position and a move.

   A player makes a set of moves (sequentially).

*   Object Model

   -  Generalizations: Piece is an abstract superclass generalizing the 
      common behavior of each piece.
   -  Aggregations: Game consists of 2 Players and a Board. The 
      Board consists of an ordered grid of 64 Positions. Each player 
      controls a Set of Pieces, which consists of 16 Pieces.
      A Move consists of 1 or 2 Pieces and a new Position.
      Each Player makes a sequential set of ordered moves. 
   -  Other attributes: A Position may or may not have a Piece. A Piece 
      either occupies a Position or it is captured.


   In lieu of a diagram, we describe the associations using the format:

      Class1 (attributes) Association_Name (attributes) Class2
         where Class1 and Class2 form an association labeled Association_Name
         (attributes) include multiplicity, such as many, ordered, or role names


   1. Game Consists_Of Board
   2. Game Consists_Of (role: white) Player 
   3. Game Consists_Of (role: black) Player 
   4. Player Controls (role: army) Set_Of_Pieces 
   5. Player Makes (many, ordered) Move
   6. Move Consists_Of (role: new location) Position 
   7. Move Consists_Of (1 or 2) Piece 
      (Note: a Move involves 2 pieces when a piece is captured)
   8. Piece Is Currently At (optional) Position
      (Note: optional because a Piece has no Position after it is captured)
   9. Board Consists_Of (many: 8x8 ordered grid) Position
  10. Set_Of_Pieces Consists_Of (16) Piece (with link attribute Configuration)
      (Configuration is 1 King, 1 Queen, 2 Bishops, 2 Knights, 2 Rooks, 8 Pawns)
  11. Piece is an abstract base class with placeholder (pure virtual) function
         Move(Position newLocation)
  12. Pawn derives from Piece and implements Move()
  13. King derives from Piece and implements Move()
  14. Queen derives from Piece and implements Move()
  15. Knight derives from Piece and implements Move()
  16. Bishop derives from Piece and implements Move()
  17. Rook derives from Piece and implements Move()

  Note that the object model does not include any knowledge of strategies.
